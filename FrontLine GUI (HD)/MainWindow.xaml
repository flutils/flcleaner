<Window x:Class="FrontLineGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:FrontLineGUI.Properties"
        xmlns:local="clr-namespace:FrontLineGUI"
        mc:Ignorable="d"
        Title="Frontline Registry Cleaner 2.1 (HD Edition)"
        Height="{Binding ElementName=myWindow, Path=MinHeight}"
        Width="{Binding ElementName=myWindow, Path=MinWidth}"
        MinWidth="835"
        MinHeight="670"
        SizeToContent="WidthAndHeight"
        ResizeMode="CanResizeWithGrip"
        Topmost="False"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        MouseDown="Window_MouseDown" Foreground="{x:Null}"
        Loaded="Window_Loaded"
    >

    <!-- Resources for this window only -->
    <Window.Resources>

        <!-- Converters -->
        <local:SystemColorToSolidBrushConverter x:Key="BrushConverter" />
        <local:ButtonColourConverter            x:Key="ButtonColourConverter" />
        
        <!-- Images -->
        <!-- Used to give us anti aliasing - https://stackoverflow.com/a/14490654/1143732 -->
        <Style TargetType="{x:Type Image}">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        </Style>

        <!-- Left Menu Radio Buttons -->
        <Style TargetType="{x:Type RadioButton}" x:Key="MainButtons">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="18px" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="#898686" />
            <Setter Property="Background" Value="#f3f3f3" />
            <Setter Property="BorderBrush" Value="#FFC6C6C6" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0,0.5,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">

                        <!-- Text Styling -->
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="2" Color="White" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ControlTemplate.Resources>

                        <!-- https://stackoverflow.com/a/7543830/1143732 -->
                        <Border Background="Transparent" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" Margin="{TemplateBinding Margin}">
                            <Grid MinHeight="70">

                                <!-- Grid Definitions -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="90px" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Background -->
                                <Border Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0,0" >
                                            <GradientStop Offset="0.15" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#FF000000" />
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                </Border>

                                <!-- Items -->
                                <Image x:Name="IconImage" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5" />
                                <TextBlock x:Name="ButtonText" Text="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,45,0" />

                            </Grid>
                        </Border>

                        <!-- Active (based on page) - used to have it as IsChecked but unreliable -->
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ContentFrame, Path=Source}" Value="Pages/Scan.xaml" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Scan" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="#4e4e4e"/>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="OpacityMask" Value="{x:Null}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ContentFrame, Path=Source}" Value="Pages/Extras.xaml" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Extras" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="#4e4e4e"/>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="OpacityMask" Value="{x:Null}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ContentFrame, Path=Source}" Value="Pages/Backup.xaml" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Backup" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="#4e4e4e"/>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="OpacityMask" Value="{x:Null}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ContentFrame, Path=Source}" Value="Pages/Statistics.xaml" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Statistics" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="#4e4e4e"/>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="OpacityMask" Value="{x:Null}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <!-- General Settings Per Button -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Scan">
                                <Setter Property="FontSize" Value="32px" />
                                <Setter Property="Height" Value="80px" />
                                <Setter TargetName="IconImage" Property="Source" Value="/Resources/scan_icon.png" />
                                <Setter TargetName="IconImage" Property="Width" Value="60px" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Extras">
                                <Setter TargetName="IconImage" Property="Source" Value="/Resources/extras_icon.png" />
                                <Setter TargetName="IconImage" Property="Width" Value="65px" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Backup">
                                <Setter TargetName="IconImage" Property="Source" Value="/Resources/backup_icon.png" />
                                <Setter TargetName="IconImage" Property="Width" Value="55px" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Statistics">
                                <Setter TargetName="IconImage" Property="Source" Value="/Resources/statistics_icon.png" />
                                <Setter TargetName="IconImage" Property="Width" Value="45px" />
                            </DataTrigger>

                            <!-- Interactivity -->
                            <!-- https://wpf-tutorial.com/styles/multi-triggers-multitrigger-multidatatrigger/ -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Scan" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="#4ea4f5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Extras" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="#ea4343" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Backup" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="#2bbe0e" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Statistics" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="#8259a9" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.1" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.1" To="#a7a7a7" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.1" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Need Help -->
        <!-- Button styling for the "Need Help?" button -->
        <Style TargetType="{x:Type Button}" x:Key="NeedHelp" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontSize" Value="18px" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#5c5c5c" />
            <Setter Property="MaxHeight" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" BorderThickness="1" BorderBrush="#d8d8d8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDBDBDB" Offset="1"/>
                                    <GradientStop Color="White" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Opacity="0.5" ShadowDepth="2" BlurRadius="3" Direction="270" />
                            </Border.Effect>
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>

                        <!-- https://stackoverflow.com/a/42448084/1143732 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Settings -->
        <!-- Add a decorator to the text on hover, mousedown and navigation -->
        <!-- https://stackoverflow.com/a/13858357/1143732 -->
        <!-- https://www.youtube.com/watch?v=aFGDs3z7zpM&ab_channel=tips%27ntricks -->
        <Style TargetType="{x:Type Button}" x:Key="SettingsLink" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <TextBlock x:Name="SettingsText" Text="{TemplateBinding Content}" Foreground="#462e00" FontStyle="Italic" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" FontFamily="Calibri">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="2" Direction="315" Color="White" Opacity="0.75" BlurRadius="0" />
                            </TextBlock.Effect>
                        </TextBlock>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="SettingsText" Property="TextDecorations" Value="Underline" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="SettingsText" Property="TextDecorations" Value="Underline" />
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=ContentFrame, Path=Source}" Value="Pages/Settings.xaml">
                                <Setter TargetName="SettingsText" Property="TextDecorations" Value="Underline" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- FL Button (SVG Path) -->
        <!-- https://stackoverflow.com/a/4078275/1143732 -->
        <Style TargetType="{x:Type Button}" x:Key="CompanyButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- https://stackoverflow.com/a/42448084/1143732 -->
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="#4b4a4a" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=FrontlineButton, Path=IsMouseOver}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.1" To="#107afe" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.1" To="{x:Null}" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>

                        <Border Background="Transparent">
                            <Grid>
                                <Viewbox>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Viewbox>
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!-- Window -->
    <Border x:Name="MainBorder" BorderThickness="5" Grid.Row="0" Grid.ColumnSpan="2" CornerRadius="15,15,0,0" SnapsToDevicePixels="True" UseLayoutRounding="True" Background="{Binding Source={x:Static properties:Settings.Default}, Path=MainBackground, Mode=Default, Converter={StaticResource BrushConverter}}" BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=MainBackground, Mode=Default, Converter={StaticResource BrushConverter}}">

        <!-- Content -->
        <Grid x:Name="MainGrid" Margin="-1">

            <!-- Grid Definition -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <!-- Header Area  -->
            <Border Grid.Row="0" Grid.ColumnSpan="2" CornerRadius="15,15,0,0" BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#00000000" Offset="1"/>
                        <GradientStop Color="#72FFFFFF" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#99FFFFFF" />
                        <GradientStop Color="#00000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>

            <!-- Logo -->
            <StackPanel Orientation="Horizontal">
                <Viewbox Height="40" Margin="10,0,0,0" HorizontalAlignment="Left" Stretch="UniformToFill">
                    <Viewbox.Effect>
                        <DropShadowEffect Color="#FFFFD99A" BlurRadius="15" ShadowDepth="0" Opacity="1" />
                    </Viewbox.Effect>
                    <Path Data="{Binding Source={x:Static properties:Resources.LogoIconPathData}, Mode=OneTime}" Fill="White" />
                </Viewbox>
                <Viewbox Margin="10,17,0,17" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                    <Viewbox.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform Y="2"/>
                        </TransformGroup>
                    </Viewbox.RenderTransform>
                    <Grid>
                        <Path Name="LogoPath" Data="{Binding Source={x:Static properties:Resources.LogoTextPathData}, Mode=OneTime}" SnapsToDevicePixels="True" Panel.ZIndex="1">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFAFAFA" Offset="1"/>
                                    <GradientStop Color="#FFADADAD" Offset="0.554"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="5" Opacity="1" Direction="115" />
                            </Path.Effect>
                        </Path>
                        <Rectangle Panel.ZIndex="2" Width="475" HorizontalAlignment="Left" Clip="{Binding Source={x:Static properties:Resources.LogoTextPathData}, Mode=OneTime}" SnapsToDevicePixels="True">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFE031" Offset="1" />
                                    <GradientStop Color="#FFFFC35C" Offset="0.554"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </Viewbox>
            </StackPanel>

            <!-- Action Buttons -->
            <StackPanel x:Name="Action_Buttons" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,7,0"  Orientation="Horizontal" Grid.Column="1" Panel.ZIndex="10" Height="42">

                <!-- HD -->
                <Border x:Name="HDBorder" Height="20" Margin="0,0,5,0" BorderBrush="Black" Background="White" BorderThickness="1" CornerRadius="10">
                    <Border x:Name="HDBorderInner" Background="White" BorderThickness="2" CornerRadius="10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25px" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Border Background="Black" CornerRadius="8,0,0,8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            <TextBlock Foreground="White" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="9" FontStyle="Italic" FontWeight="Bold" Margin="1,0,0,0">HD</TextBlock>

                            <TextBlock Foreground="Black" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="9" Margin="3,0">Edition</TextBlock>
                        </Grid>
                    </Border>
                </Border>

                <!-- Minimize -->
                <Button Name="MinimizeButton" Style="{StaticResource MainActionButton}" Click="MinimizeButton_Click" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Center" Height="35" Width="35" Background="#0e76f6">
                    <Path Data="{Binding Source={x:Static properties:Resources.MinimizeButtonPathData}, Mode=OneTime}" Fill="White"/>
                </Button>

                <!-- Maximize -->
                <Button Name="MaximizeButton" Style="{StaticResource MainActionButton}" Click="MaximizeButton_Click" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Center" Height="35" Width="35" Background="#FF272727">
                    <Path Data="{Binding Source={x:Static properties:Resources.MaximizeButtonPathData}, Mode=OneTime}" Stretch="Fill" MaxHeight="11" MaxWidth="11" Fill="White"/>
                </Button>

                <!-- Close -->
                <Button Name="CloseButton" Style="{StaticResource MainActionButton}" Click="CloseButton_Click" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Center" Height="35" Width="35" Background="#e30c0c">
                    <Path Data="{Binding Source={x:Static properties:Resources.CloseButtonPathData}, Mode=OneTime}" Fill="White"/>
                </Button>

            </StackPanel>

            <!-- Bottom Area Grid (Under Header) -->
            <Grid Grid.Row="1" Grid.ColumnSpan="2">

                <!-- Grid Definitions -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35px" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Top Border -->
                <Border Grid.Row="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF3EB42" Offset="1"/>
                            <GradientStop Color="#FFBB8F24" Offset="0"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <!-- Inner Border Area -->
                <Border Grid.Row="0" BorderThickness="0 0 0 1" BorderBrush="#bb8f24">
                    <Grid x:Name="SubTitle" Margin="2,2,2,2">

                        <!-- Background -->
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFAB771B"/>
                                <GradientStop Color="#FFF5EE41" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>

                        <!-- Grid Definitions -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <!-- Subtitle -->
                        <TextBlock Foreground="#462e00" FontStyle="Italic" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" FontFamily="Calibri">
                            Scan, Optimize &amp; Boost PC Performance!
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="2" Direction="315" Color="White" Opacity="0.75" BlurRadius="0" />
                            </TextBlock.Effect>
                        </TextBlock>

                        <!-- Buttons -->
                        <StackPanel x:Name="SubActionButtons" HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0" Orientation="Horizontal">

                            <!-- Settings -->
                            <Button Name="SettingsButton" Content="Settings" Click="SettingsButton_Click" Style="{StaticResource SettingsLink}" HorizontalAlignment="Right" VerticalAlignment="Center" />

                        </StackPanel>

                    </Grid>
                </Border>

                <!-- Main Content Border -->
                <Border Grid.Row="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF2F2F2"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <!-- Main Area -->
                <Grid Grid.Row="1">

                    <!-- Grid Definitions -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="265" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Border -->
                    <Border BorderThickness="0,0,0,0" Grid.ColumnSpan="2" Grid.RowSpan="1" Panel.ZIndex="10" Height="5" VerticalAlignment="Top" Opacity="0.25">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                <GradientStop Offset="0.15" Color="#00000000" />
                                <GradientStop Offset="1" Color="#FF000000" />
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>

                    <!-- Left Menu BG -->
                    <!-- This is required to achieve the "fade" effect on the left menu background -->
                    <!-- Source: https://stackoverflow.com/a/5505174/1143732 -->
                    <Border BorderThickness="0,0,1,0" BorderBrush="#FFA7A7A7" Grid.Column="0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
                                <GradientStop Color="#FFDFDFDF"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                <GradientStop Offset="0.15" Color="#00000000" />
                                <GradientStop Offset="1" Color="#FF000000" />
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>

                    <!-- Left Menu Content -->
                    <Border BorderThickness="0,0,2,0" BorderBrush="White" Grid.Column="0" Margin="0,0,1,0">
                        <Grid Grid.Row="2" Grid.Column="0" Margin="5,0">

                            <!-- Grid Definitions -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Buttons -->
                            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0" Grid.Row="0">

                                <!-- Scan -->
                                <RadioButton Style="{StaticResource MainButtons}" Content="Scan" Name="ScanButton" GroupName="Main" HorizontalAlignment="Stretch" VerticalAlignment="Top" Click="MainButton_Click" Tag="Scan" IsChecked="True" />

                                <!-- Extras -->
                                <RadioButton Style="{StaticResource MainButtons}" Content="Extras" Name="ExtrasButton" GroupName="Main" HorizontalAlignment="Stretch" VerticalAlignment="Top" Click="MainButton_Click" Tag="Extras" />

                                <!-- Backup -->
                                <RadioButton Style="{StaticResource MainButtons}" Content="Backup" Name="BackupButton" GroupName="Main" HorizontalAlignment="Stretch" VerticalAlignment="Top" Click="MainButton_Click" Tag="Backup" />

                                <!-- Statistics -->
                                <RadioButton Style="{StaticResource MainButtons}" Content="Statistics" Name="StatisticsButton" GroupName="Main" HorizontalAlignment="Stretch" VerticalAlignment="Top" Click="MainButton_Click" Tag="Statistics" />

                            </StackPanel>

                            <!-- Footer -->
                            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,10" Grid.Row="1">

                                <!-- Anniversary -->
                                <Image Source="/Resources/anniversary.png" Stretch="UniformToFill" Margin="10,0,10,10" MaxWidth="175" />

                                <!-- FL -->
                                <Button Name="FrontlineButton" Style="{StaticResource CompanyButton}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="30,0,30,0" Click="FrontlineButton_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{x:Null}">
                                    <Path Name="FLPath" Data="{Binding Source={x:Static properties:Resources.CompanyURLButtonPathData}, Mode=OneTime}" />
                                </Button>

                                <!-- Version -->
                                <Button Name="VersionButton" Click="VersionButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="30,5,30,5" BorderBrush="{x:Null}" Foreground="Black" Background="{x:Null}">
                                    <TextBlock>
                                        <Run Text="{Binding Version, Mode=OneTime}" FontWeight="Bold" />
                                        <Run Text="(August 23rd 2022)" />
                                    </TextBlock>
                                </Button>

                                <!-- Need Help? -->
                                <Button Name="HelpButton" Content="Need Help?" Style="{StaticResource NeedHelp}" Click="HelpButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="10,5,7,5" BorderBrush="{x:Null}" Background="{x:Null}" Height="65" />

                            </StackPanel>

                        </Grid>
                    </Border>

                    <!-- Right Area (Left Menu Shadow) -->
                    <!-- This is required to achieve the "fade" effect on the left menu background -->
                    <!-- Source: https://stackoverflow.com/a/5505174/1143732 -->
                    <Border BorderThickness="1,0,0,0" Grid.Column="1" BorderBrush="#FFD9D9D9">
                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                <GradientStop Offset="0.15" Color="#00000000" />
                                <GradientStop Offset="1" Color="#FF000000" />
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>

                    <!-- Border -->
                    <Border BorderThickness="0,0,0,0" Grid.Column="1" Panel.ZIndex="10" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Opacity="0.075">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" >
                                <GradientStop Color="Black"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>

                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                <GradientStop Offset="0.15" Color="#00000000" />
                                <GradientStop Offset="1" Color="#FF000000" />
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>

                    <!-- Right Area -->
                    <!-- This houses all of the panels (grids), which means that we're able to hide them as needed -->
                    <!-- I have split the panels into separate CS files for the sake of brevity -->
                    <Frame x:Name="ContentFrame" NavigationUIVisibility="Hidden" Margin="10" Grid.Row="2" Grid.Column="1" Source="/Pages/Scan.xaml" BorderBrush="#a6b0b5" BorderThickness="2"/>

                </Grid>
            </Grid>

        </Grid>
    </Border>
</Window>
