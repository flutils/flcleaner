<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FrontLineGUI"
      x:Class="FrontLineGUI.Scan"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="771"
      Title="Scan" Background="Black">

    <!-- Resources -->
    <Page.Resources>
        
        <!-- Converters -->
        <local:NotEqualToOneBooleanConverter x:Key="NotEqualToOneBooleanConverter" />

        <!-- Scan Button -->
        <Style TargetType="{x:Type Button}" x:Key="MainScanButton">

            <!-- General -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="75,10,75,5" />
            <Setter Property="Height" Value="105"/>
            <Setter Property="Content" Value="{DynamicResource Str_ScanMainButton}" />

            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" x:Name="MainButtonBackground" Background="Black" BorderThickness="2" BorderBrush="Black">
                            <Border CornerRadius="10" BorderThickness="1" x:Name="Border">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#A5FFFFFF"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.75" StartPoint="0.5,0">
                                        <GradientStop Color="White" />
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Effect>
                                    <DropShadowEffect Direction="0" ShadowDepth="0" Color="Black" Opacity="1" BlurRadius="10"/>
                                </Border.Effect>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Name="MainText"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40" FontWeight="Bold" Text="{TemplateBinding Property=Content}" Margin="0" LineStackingStrategy="BlockLineHeight" LineHeight="38">
                                        <TextBlock.Effect>
                                            <DropShadowEffect Direction="320" ShadowDepth="2" Color="Black" Opacity="1" BlurRadius="2"/>
                                        </TextBlock.Effect>
                                    </TextBlock>
                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Foreground="White" Content="{DynamicResource Str_ScanSelectAllButtonRecommended}" ContentStringFormat="({0})" Padding="0 " Margin="0">
                                        <Label.Effect>
                                            <DropShadowEffect Direction="320" ShadowDepth="2" Color="Black" Opacity="1" BlurRadius="2"/>
                                        </Label.Effect>
                                    </Label>
                                </StackPanel>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.55" />
                                <Setter Property="Content" Value="{DynamicResource Str_ScanMainButtonNoSelection}" />
                                <Setter TargetName="MainText" Property="FontSize" Value="34" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsEnabled" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="MainButtonBackground" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.1" To="Blue" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="MainButtonBackground" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.05" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScanItems ListBox -->
        <Style TargetType="{x:Type ListBox}" x:Key="ScanItemsListBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>
        
        <!-- ScanItems ListBox Items -->
        <!-- ControlTemplate was required due to .NET 4.5 removing the ability to change system brushes - https://stackoverflow.com/a/18945651/1143732 -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ScanItemsItemStyle">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="Transparent" x:Name="BackgroundBorder">
                            <DockPanel Margin="2" LastChildFill="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <Image Source="{Binding Image}" Width="38" Height="38" DockPanel.Dock="Left" />
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding Label}" TextWrapping="Wrap" FontWeight="Normal" FontSize="11" />
                                </StackPanel>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.7" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="Opacity" Duration="0:0:0.05" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.25" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="Opacity" Duration="0:0:0.05" To="{x:Null}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Last Scan Button -->
        <Style TargetType="{x:Type Button}" x:Key="LastScanButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.7" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.05" To="{x:Null}" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Select All Button -->
        <Style TargetType="{x:Type Button}" x:Key="SelectAllButton" BasedOn="{StaticResource GeneralButton}">
            <Setter Property="Content" Value="{DynamicResource Str_ScanSelectAllButton}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=ScanItemsElement, Converter={StaticResource NotEqualToOneBooleanConverter}}" Value="False">
                    <Setter Property="Content" Value="{DynamicResource Str_ScanSelectAllButtonDeSelect}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>

    <!-- Main -->
    <Grid>

        <!-- Grid Definition -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <!-- Main Scanning Grid -->
        <Grid Background="White">

            <!-- Grid Definition -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Title -->
            <StackPanel HorizontalAlignment="stretch" VerticalAlignment="Top">

                <!-- Title -->
                <TextBlock FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" TextDecorations="Underline" FontSize="20" Foreground="#FF323232" Margin="0,10,0,0" Text="{DynamicResource Str_ScanPreTitle}" />

                <!-- Intro -->
                <TextBlock TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF323232" Margin="10,5,10,0" Text="{DynamicResource Str_ScanPreInfo}" TextAlignment="Center" FontSize="12" />

                <!-- Scan Now Button -->
                <Button Style="{StaticResource MainScanButton}" IsEnabled="{Binding SelectedItems.Count, ElementName=ScanItemsElement, Converter={StaticResource NotEqualToOneBooleanConverter}}" />

                <!-- Last Scan -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Button DataContext="{DynamicResource Str_ScanMainLastPerformed}" ToolTip="{DynamicResource Str_ScanMainLastPerformedToolTip}" FontWeight="Bold" FontSize="12" FontStyle="Italic" Style="{StaticResource LastScanButton}" Click="LastScanButton_Click">
                        <!-- If we want to pass an array, need to do it like this -->
                        <!-- https://stackoverflow.com/questions/1350598/passing-two-command-parameters-using-a-wpf-binding -->
                        <Button.CommandParameter>
                            <x:Array Type="sys:String" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <sys:String>Statistics</sys:String>
                            </x:Array>
                        </Button.CommandParameter>
                        <TextBlock>
                            <Run Text="{Binding Path=.}" TextDecorations="Underline" /><!--
                            --><Run Text=":" />
                            <Run Text="01/08/2022" />
                        </TextBlock>
                    </Button>

                </StackPanel>

                <!-- Items Grid -->
                <Grid Margin="15,10,15,0">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>

                    <!-- Items -->
                    <!-- ListView used because it gives us the ability to design everything we need -->
                    <!-- https://learn.microsoft.com/en-us/dotnet/api/system.windows.controls.listview?redirectedfrom=MSDN&view=windowsdesktop-7.0 -->
                    <ListView Margin="0" ItemsSource="{Binding ScanItemsObject}" Style="{StaticResource ScanItemsListBox}" SelectionMode="Multiple" HorizontalContentAlignment="Stretch" ItemContainerStyle="{StaticResource ScanItemsItemStyle}" x:Name="ScanItemsElement">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="3" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                </Grid>

            </StackPanel>

            <!-- Bottom Row -->
            <Grid Grid.Row="2">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Selection Management -->
                <Grid Grid.Row="0" Margin="10">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Selected -->
                    <StackPanel Grid.Column="0" VerticalAlignment="Center" Orientation="Horizontal">
                        <Label Content="Selected: " FontWeight="Bold" VerticalContentAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding ElementName="ScanItemsElement" Path="SelectedItems.Count" FallbackValue="0"/>
                                    <Binding Path="ScanItemsObject.Count" FallbackValue="0" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <!-- Select all -->
                    <StackPanel Orientation="Horizontal"  Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                        <Button Content="{DynamicResource Str_AddNewButton}" Background="Red" Style="{StaticResource GeneralButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Click="AddNewButton_Click" Name="InfoSelected" Margin="0,0,1,0" />
                        <Button Style="{StaticResource SelectAllButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Click="SelectAllButton_Click" Name="AllSelected" />
                    </StackPanel>
                    
                </Grid>

                <!-- Bottom Info -->
                <Grid Grid.Row="1" Background="#f9f9f9" Height="55">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="0.35*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                        
                    <!-- Border -->
                    <Border BorderBrush="#c5c5c5" BorderThickness="0,1,0,0" Grid.ColumnSpan="2" />

                    <!-- OS Info -->
                    <!-- https://www.codeproject.com/Articles/73000/Getting-Operating-System-Version-Info-Even-for-Win#_comments -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0">
                        <Label FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,3,0" Content="{DynamicResource Str_ScanYourSystem}" ContentStringFormat="{}{0}:" Padding="0" />
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding OSIcon, Mode=OneTime}" Margin="0,0,1,0" MaxWidth="30" RenderOptions.BitmapScalingMode="HighQuality" />
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <!-- These need to be bound programmatically as they require an instance of a static class -->
                                <TextBlock Name="OSName" VerticalAlignment="Center" FontWeight="Bold" LineStackingStrategy="BlockLineHeight" LineHeight="12" />
                                <TextBlock Name="OSEdition" VerticalAlignment="Center" FontSize="10" LineStackingStrategy="BlockLineHeight" LineHeight="11" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <!-- Performance (CPU/RAM) -->
                    <StackPanel Grid.Column="1" Margin="0,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal" Name="CPUInformation">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <TextBlock Text="CPU" HorizontalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="{Binding CPUPower, Mode=OneWay, FallbackValue=0, StringFormat='{}{0}%'}" HorizontalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,0,0,0">
                            <TextBlock Text="RAM" HorizontalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="{Binding RAMPower, Mode=OneWay, FallbackValue=0, StringFormat='{}{0}%'}" HorizontalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,0,0,0">
                            <TextBlock Text="HDD" HorizontalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="{Binding HDDPower, Mode=OneWay, FallbackValue=0,StringFormat='{}{0}%'}" HorizontalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,0,0,0">
                            <TextBlock Text="GPU" HorizontalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="{Binding GPUPower, Mode=OneWay, FallbackValue=0, StringFormat='{}{0}%'}" HorizontalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>

                </Grid>

            </Grid>

        </Grid>

    </Grid>
</Page>
